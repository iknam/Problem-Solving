// 중력
/*
int main(){
	int loop_x,loop_y,sector=0;
	int map[MAP_X][MAP_Y]={0,};
	//char ch;

	map[2][2]=2;

	while(1){
		// process
		for(loop_y=0;loop_y<MAP_Y;loop_y++) {
			for(loop_x=0;loop_x<MAP_X;loop_x++) {
				if(map[loop_x][loop_y]==2){
					map[loop_x][loop_y]=0;
					map[loop_x][++loop_y]=2;
					//논리 연산자
				}
			}
		}

		//printf("%10d",map[2][2]);

		
		// display
		for(loop_y=0;loop_y<MAP_Y;loop_y++) {
			for(loop_x=0;loop_x<MAP_X;loop_x++) {
				printf("%d",map[loop_x][loop_y]);
			}
			putchar('\n');
		}
		Sleep(777);
		system("cls");

	}
}
*/

// 배경에 벽출력
/*
int main(){
	int loop_x,loop_y,sector=0;
	int map[MAP_X][MAP_Y]={0,};
	char ch;

	// process
	for(loop_y=0;loop_y<MAP_Y;loop_y++) {
		for(loop_x=0;loop_x<MAP_X;loop_x++) {
			if(loop_x==0 || loop_x==MAP_X-1 || loop_y==0 || loop_y==MAP_Y-1){
				map[loop_x][loop_y]=BARRIER;
			}
		}
	}

	// display
	for(loop_y=0;loop_y<MAP_Y;loop_y++){
		for(loop_x=0;loop_x<MAP_X;loop_x++)  {
			printf("%d",map[loop_x][loop_y]);
		}
		putchar('\n');
	}

	system("pause");
}
*/

// 블록회전
/*
int main(){
	int loop_x,loop_y,sector=0;
	int map[MAP_X][MAP_Y]={0,};
	char ch;

	//map[0][]=char(); 

	// 5개 블록 나중에 입력
	int box[][3][3]={
		{{N,B,B},{N,B,B},{N,N,N}}
	};

	int thunder_left[][3][3]={
		{{B,B,N},{N,B,B},{N,N,N}},
		{{N,B,N},{B,B,N},{B,N,N}},
		{{N,N,N},{B,B,N},{N,B,B}},
		{{N,N,B},{N,B,B},{N,B,N}}
	};

	while(1) {
		// 키입력
		ch=0;
		if(kbhit()){
			ch=getch();
		}

		switch(ch){
		case LEFT_SPIN :
			if(sector==0){//배열0->3 돌아가는것임
				sector=3;
			}else{
				sector--;
			}
			break;
		case RIGHT_SPIN :
			if(sector==3){
				sector=0;
			}else{
				sector++;
			}
			break;
		}


		// process	
		for(loop_x=0;loop_x<MAP_X;loop_x++) {
			for(loop_y=0;loop_y<MAP_Y;loop_y++) {
				map[loop_x][loop_y]=thunder_left[sector][loop_x][loop_y]; //sector를 조작해서 번개블록을 회전시킬수 있다
			}
		}

		// display
		for(loop_x=0;loop_x<MAP_X;loop_x++) {
			for(loop_y=0;loop_y<MAP_Y;loop_y++) {
				printf("%d",map[loop_x][loop_y]);
			}
			putchar('\n');
		}
		Sleep(777);
		system("cls");
	}
	return 0;
}
*/

/* 블록이동
int main(){
	int map[MAP_X][MAP_Y]={0,},loop_x,loop_y;
	char ch,swt=false;

	map[1][1]=2;

	while(1){
		// display
		for(loop_y=0;loop_y<MAP_Y;loop_y++){
			for(loop_x=0;loop_x<MAP_X;loop_x++){
				printf("%d",map[loop_x][loop_y]);
			}
			putchar('\n');
		}

		// process
		for(loop_y=0;loop_y<MAP_Y;loop_y++){
			for(loop_x=0;loop_x<MAP_X;loop_x++){
				if(map[loop_x][loop_y]==BLOCK){
					//if(swt==false){
					//if(kbhit()){
					getch();
					ch=getch();
					map[loop_x][loop_y]=NOTHING;
					//}
					switch(ch){
					case LEFT :
						map[--loop_x][loop_y]=BLOCK;
						break;
					case RIGHT :
						map[++loop_x][loop_y]=BLOCK; // 왜 loop_x+1은 안되고 loop_x+=1은 되는가? 
						break;
					case DOWN :
						map[loop_x][++loop_y]=BLOCK;
						break;
					case UP :
						map[loop_x][--loop_y]=BLOCK;
						break;
					}
				}

				//	if(swt==true){
				//	map[loop_x][loop_y]=NOTHING;
				//	swt=false;
			}
		}
		//sleep(1);
		system("cls");
	}
}
*/
