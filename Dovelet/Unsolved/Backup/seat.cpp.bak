#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <math.h>
#include <string>
#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

int comb(int N, int K)
{
	int cnt = 0;
	std::string bitmask(K, 1); // K leading 1's
	bitmask.resize(N, 0); // N-K trailing 0's

	// print integers and permute bitmask
	do {
		//for (int i = 0; i < N; ++i) // [0..N-1] integers
		//{
			//if (bitmask[i]) std::cout << " " << i;
		//}
		//std::cout << std::endl;
		cnt++;
	} while (std::prev_permutation(bitmask.begin(), bitmask.end()));
	return cnt;
}

int main()
{ 
	// if use next_permutation? then 321 skip
	// if fixed seat 4, 7 then 123 solve after 56, 89 solve
	
	vector<int> v;
	int N, M, i;

	cin >> N >> M;

	v.resize(M);

	for (i = 0; i < M; i++)
	{
		cin >> v[i];
		//return 0;
	}

	cout << comb(2, 2);

	return 0;
}

